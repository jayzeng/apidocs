FORMAT: 1A
HOST: http://api.knockrentals.com

# knock
Knock API is a service for vending and modifying data for knockrentals

# Group Authentication
Authenticating users through the **Knock API**

##Allowed HTTPs requests:

- `POST` - Creates or updates a resource
- `PUT` - Updates a resource
- `GET` - Retrieves a resource or list of resources
- `DELETE` - Delete a resource

# Group Appointments

## Appointment [/v1/appointments/{appointment_id}]
+ Parameters
    + appointment_id (required, string, `14`) ... ID of the appointment

+ Model (application/json)
    + Body

            {
                "created_time": "Wed, 03 Sep 2014 08:29:23 GMT",
                "end_time": "2014-09-08T08:00:00-07:00",
                "id": 2,
                "is_active": true,
                "manager_id: 1,
                "manager_notes": null,
                "modified_time": "Wed, 03 Sep 2014 08:29:23 GMT",
                "renter_id": 2,
                "renter_notes": "Some renter written writings",
                "renter_visited": false,
                "start_time": "2014-09-08T08:15:00-07:00",
                "status": "requested",
                "type": "tour",
                "listing_id": "054cfc34c7ec452af511cd5e2202c12966fc54a7"
            }

### Get Appointment [GET]
+ Response 200
    [Appointment][]

### Cancel Appointment [DELETE]
+ Response 204


## Appointments Collection [/v1/appointments{?status,start,end,listing_id}]
+ Model (application/json)
    + Body

                 {
                     "appointments": [
                         {
                             "created_time": "Wed, 03 Sep 2014 08:29:23 GMT",
                             "end_time": "2014-09-08T08:00:00-07:00",
                             "id": 2,
                             "is_active": true,
                             "manager_id": 1,
                             "manager_notes": null,
                             "modified_time": "Wed, 03 Sep 2014 08:29:23 GMT",
                             "renter_id": 2,
                             "renter_notes": "Some renter written writings",
                             "renter_visited": false,
                             "start_time": "2014-09-08T08:15:00-07:00",
                             "status": "visited",
                             "type": "tour",
                             "listing_id": "054cfc34c7ec452af511cd5e2202c12966fc54a7"
                         },
                         {
                             "created_time": "Wed, 03 Sep 2014 08:29:23 GMT",
                             "end_time": "2014-09-09T10:15:00-07:00",
                             "id": 3,
                             "is_active": true,
                             "manager_id": 1,
                             "manager_notes": null,
                             "modified_time": "Wed, 03 Sep 2014 08:29:23 GMT",
                             "renter_id": 2,
                             "renter_notes": "Some renter written writings",
                             "renter_visited": false,
                             "start_time": "2014-09-09T10:00:00-07:00",
                             "status": "confirmed",
                             "type": "tour",
                             "listing_id": "054cfc34c7ec452af511cd5e2202c12966fc54a7"
                         },
                         {
                             "created_time": "Wed, 03 Sep 2014 08:29:23 GMT",
                             "end_time": "2014-09-10T13:30:00-07:00",
                             "id": 4,
                             "is_active": true,
                             "manager_id": 1,
                             "manager_notes": null,
                             "modified_time": "Wed, 03 Sep 2014 08:29:23 GMT",
                             "renter_id": 2,
                             "renter_notes": "Some renter written writings",
                             "renter_visited": false,
                             "start_time": "2014-09-10T13:15:00-07:00",
                             "status": "requested",
                             "type": "tour",
                             "listing_id": "054cfc34c7ec452af511cd5e2202c12966fc54a7"
                         }
                     ]
                 }

### Get Appointments [GET]
+ Parameters
    + status (optional, string, `requested`) .. Status identifier. Valid values are 'requested', 'confirmed', 'rejected, 'canceled', or 'visited'. Only appointments with the provided state are returned./
    + start (optional, string, `2014-10-13T10:00-07:00`) ... ISO timestamp. Only appointments that start on or after this date are returned.
    + end (optional, string, `2014-10-13T10:00-07:00`) ... ISO timestamp. Only appointments that end on or before this date are returned.
    + listing_id (optional, string, `q4ru3tc4g26qxc7srvj4xcbsr5qtc7ud4ma9uzh8`) ... Unique listing ID

+ Response 200
    [Appointments Collection][]

### Request Appointment [POST]
+ Request (application/json)

            {
                 "listing_id": "9420d8f9202469a79df197455e9a595ff106f1cc",
                 "requested_times": [
                      {
                           "start_time": "2014-10-13T10:00-07:00",
                           "end_time": "2014-10-13T11:00-07:00"
                      },
                      {
                           "start_time": "2014-10-13T11:00-07:00",
                           "end_time": "2014-10-13T12:00-07:00"
                      }
                 ],
                 "type": "tour",
                 "renter_notes": "Some renter written writings" (optional)
            }

+ Response 201 (application/json)
    [Appointment][]

## Confirm [/v1/appointments/{appointment_id}/confirm]
+ Parameters
    + appointment_id (required, number, `14`) ... ID of the appointment

+ Model
    + Body

            {
                'appointment_status': 'accepted'
            }


### Confirm Appointment [POST]
+ Response 201 (application/json)
    [Confirm][]

### Cancel Appointment Confirmation [DELETE]
+ Response 204 (application/json)

### Get Appointment Confirmation [GET]
+ Response 200
    [Confirm][]


## Visit [/v1/appointments/{appointment_id}/visit]
+ Parameters
    + appointment_id (required, number, `14`) ... ID of the appointment

+ Model
    + Body
            
            {
                'renter_visited': True
            }

### Set Appointment Visited Status [PUT]
+ Response 200
    [Visit][] 

### Get Appointment Visited Status [GET]
+ Response 200
    [Visit][]

# Group Authentication

## Register [/v1/auth/register]
### Register Renter or Manager [POST]
+ Request (application/json)

            {
                'type':'renter',
                'firstname':'michael',
                'lastname': 'frank',
                'username': 'Chetmanley',
                'password': 'qwerty123'
            }

+ Response 201 (application/json)

            {
                'token':
                'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhIjoxLCJiIjoyfQ.qRrTAKuNhMWGekWwDoR7hylsgQq5VRKEpk5UvgguWaQ'
            }


## Validate [/v1/auth/validate]
### Authenticate [POST]
Validate a manager or renter
+ Request (application/json)

            {
                'type':'renter',
                'username': 'Chetmanley',
                'password': 'qwerty123'
            }

+ Response 201 (application/json)

            {
                'token':
                'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhIjoxLCJiIjoyfQ.qRrTAKuNhMWGekWwDoR7hylsgQq5VRKEpk5UvgguWaQ'
            }

+ Response 401 (application/json)

            {
              'error_message': 'invalid credential'
            }

## Facebook [/v1/auth/facebook]
### Facebook Login [POST]
+ Request (application/json)

        {
            'clientId': 'SYgWfyVDcpmSDN2W',
            'redirectUri': 'http://www.redirectdestination.com',
            'code': 'pmguG3D7nkNgdT7t',
            'client_type': 'web'
        }

Or for iOS
        {
            'clientId': 'ios',
            'access_token': 'supertoken_accesstoken'
        }

+ Response 201 (application/json)

        {
            'token':
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhIjoxLCJiIjoyfQ.qRrTAKuNhMWGekWwDoR7hylsgQq5VRKEpk5UvgguWaQ'
        }

+ Response 403 (application/json)

        {
            'error_message': 'Message describing the error',
            'error_type': 'OAuthException'
        }

## Linkedin [/v1/auth/linkedin]
### Linkedin Login [POST]
+ Request (application/json)

        {
            'clientId': 'SYgWfyVDcpmSDN2W',
            'redirectUri': 'http://www.redirectdestination.com',
            'code': 'pmguG3D7nkNgdT7t',
            'client_type': 'web'
        }

Or for iOS
        {
            'clientId': 'ios',
            'access_token': 'supertoken_accesstoken'
        }

+ Response 201 (application/json)

        {
            'token':
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhIjoxLCJiIjoyfQ.qRrTAKuNhMWGekWwDoR7hylsgQq5VRKEpk5UvgguWaQ'
        }

+ Response 403 (application/json)

        {
            'error_message': 'Message describing the error',
            'error_type': 'OAuthException'
        }

# Group Community

## Community [/v1/community]
### Save Community [POST]
+ Request (application/json)

            {
                'community':'Capital Heights'
            }

+ Response 201 (application/json)

            {
                'community_id':'gl9avl5OV0EzgdG1'
            }


## Community Information [/v1/community/{community_id}]
+ Parameters
    + community_id (required, string, `gl9avl5OV0EzgdG1`) ... ID of the community of interest

+ Model (application/json)
    + Body
            
            {
                'community': {}
            }


### Retrieve a single community [GET]
+ Response 200 (application/json)
    
    [Community Information][]


## Community Photo [/v1/community/photo]
### Upload Photo [POST]
+ Request (multipart/form-data; boundary=---BOUNDARY)

            -----BOUNDARY
            Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
   
            /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
            HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
            MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
            AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
            AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
            -----BOUNDARY

+ Response 201 (application/json)
    
            {
                's3key': 'knock/community/d3d3Lmdvb2dsZS5jb20xMC0zMS0xOTkx.jpg',
                's3url':
                'knock.example.picture.s3.amazonaws.com/an84nJd8snd8JJ8.jpg'
            }


## Delete Community Photo [/v1/community/photo/delete]
### Delete Photo [POST]
+ Request (application/json)

            {
                's3key':'knock/community/d3d3Lmdvb2dsZS5jb20xMC0zMS0xOTkx.jpg'
            }

+ Response 201 (application/json)

            {
                'deleted': 'knock/community/d3d3Lmdvb2dsZS5jb20xMC0zMS0xOTkx.jpg' 
            }

# Group Health
## Health Check [/v1/system/health/check/]
### Get health check [GET]
+ Response 200

        "superman wears chuck norris underwear"

## Health Details [/v1/system/health/details/]
### Get health details [GET]
+ Response 200 (application/json)

        {
            "database": true,
            "elasticsearch": true
        }

# Group Listing

## Listing [/v1/listing/{listing_id}/]
### Get Listing [GET]
+ Parameters
    + listing_id (required, string, `xfp5uhm4wx9sm54722thtf2t3t9xr2hahf4536jq`) ... Unique ID for a listing

+ Response 200
             
            {
                'listing': {
                    "social": {
                        "website": "",
                        "twitter": "",
                        "facebook": ""
                    },
                    "laundry": {
                        "notes": "",
                        "types": []
                    },
                    "description": {
                        "short": "",
                        "full": ""
                    },
                    "floorplan": {
                        "image": null,
                        "bedrooms": "1",
                        "bathrooms": "1",
                        "size": "1000"
                    },
                    "views": [],
                    "extra": {
                        "isSmokingAllowed": null,
                        "yearBuilt": "",
                        "hasWheelchairAccess": null,
                        "sharedUnit": false
                    },
                    "utilities": {
                        "estimatedCost": "",
                        "included": []
                    },
                    "photos": {
                        "files": [
                            {
                              "s3url": "https://zipdigs_photos.s3.amazonaws.com/knock/community/a3VwdG9uLmpwZzIwMTQtMTAtMjkgMTU6NDQ6NTEuOTkw...",
                              "s3key": "knock/community/a3VwdG9uLmpwZzIwMTQtMTAtMjkgMTU6NDQ6NTEuOTkwOTQw.jpg",
                              "filename": "kupton.jpg"
                            }
                        ]
                    },
                    "amenities": {
                        "common": [],
                        "unit": []
                    },
                    "location": {
                        "propertyType": "",
                        "geo": {
                          "type": "point",
                          "coordinates": [
                            -122.3748877,
                            47.6545525
                          ]
                        },
                        "name": "1234 5th Ave",
                        "address": {
                          "city": "Seattle",
                          "zip": "98119",
                          "house": "",
                          "raw": "1234 5th Avenue, Seattle, WA 98119, USA",
                          "state": "WA",
                          "street": "1234 5th Avenue",
                          "unit": "B202"
                        }
                    },
                    "appliances": [],
                    "parking": {
                      "notes": "",
                      "types": []
                    },
                    "leasing": {
                        "availableDate": "2014-10-29T07:00:00.000Z",
                        "application": {
                          "fee": "",
                          "link": ""
                        },
                        "terms": {
                          "deposit": ""
                        },
                        "monthlyRent": "1500"
                    },
                    "id": "GELe3Qv7MJGXQb69",
                    "pets": {
                        "notes": "",
                        "allowed": []
                    }
                }
            }


## New Listing [/v1/listing/]
### Create Listing [POST]
+ Request (application/json)

            {
              'listing':
                  {
                    "social": {
                      "website": "",
                      "twitter": "",
                      "facebook": ""
                    },
                    "laundry": {
                      "notes": "",
                      "types": []
                    },
                    "description": {
                      "short": "",
                      "full": ""
                    },
                    "floorplan": {
                      "image": null,
                      "bedrooms": "1",
                      "bathrooms": "1",
                      "size": "1000"
                    },
                    "views": [],
                    "extra": {
                      "isSmokingAllowed": null,
                      "yearBuilt": "",
                      "hasWheelchairAccess": null,
                      "sharedUnit": false
                    },
                    "utilities": {
                      "estimatedCost": "",
                      "included": []
                    },
                    "photos": {
                      "files": [
                        {
                          "s3url":
                  "https://zipdigs_photos.s3.amazonaws.com/knock/community/a3VwdG9uLmpwZzIwMTQtMTAtMjkgMTU6NDQ6NTEuOTkw...",
                          "s3key":
                  "knock/community/a3VwdG9uLmpwZzIwMTQtMTAtMjkgMTU6NDQ6NTEuOTkwOTQw.jpg",
                          "filename": "kupton.jpg"
                        }
                      ]
                    },
                    "amenities": {
                      "common": [],
                      "unit": []
                    },
                    "location": {
                      "propertyType": "",
                      "geo": {
                        "type": "point",
                        "coordinates": [
                          -122.3748877,
                          47.6545525
                        ]
                      },
                      "name": "3810 14th Avenue West",
                      "address": {
                        "city": "Seattle",
                        "zip": "98119",
                        "house": "",
                        "raw": "3810 14th Avenue West, Seattle, WA 98119, USA",
                        "state": "WA",
                        "street": "3810 14th Avenue West",
                        "unit": "B202"
                      }
                    },
                    "appliances": [],
                    "parking": {
                      "notes": "",
                      "types": []
                    },
                    "leasing": {
                      "availableDate": "2014-10-29T07:00:00.000Z",
                      "application": {
                        "fee": "",
                        "link": ""
                      },
                      "terms": {
                        "deposit": ""
                      },
                      "monthlyRent": "1500"
                    },
                    "id": "GELe3Qv7MJGXQb69",
                    "pets": {
                      "notes": "",
                      "allowed": []
                    }
                }
            }

+ Response 201 (application/json)

            {
                'listing_id': 'JQpNKcNbCzYYysuu'
            }


## Listing Openhouse [/v1/listing/{listing_id}/openhouse/]
### Get Listing Open Houses [GET]
+ Parameters
    + listing_id (required, string, `xfp5uhm4wx9sm54722thtf2t3t9xr2hahf4536jq`) ... Unique listing ID

+ Response 200 (application/json)

            {
                'open_houses': [
                    {
                        'id': 14,
                        'manager_id': 45,
                        'listing_id': 'b2pk65wvzb9cr7hny6jmx98yh4b5dwrnbv8e3q7m',
                        'start_time': "2014-10-29T07:00:00.000Z",
                        'end_time': "2014-10-29T07:00:00.000Z",
                        'notes': '',
                        'created_time': "2014-10-29T07:00:00.000Z",
                        'modified_time': "2014-10-29T07:00:00.000Z",
                        'is_active': true
                    }
                ]
            }


## Listing Calendar [/v1/listing/{listing_id}/calendar{?start,end}/]
+ Parameters
    + listing_id (required, string, `3dfre7dtdpun4c6wx8fbkss32a2szbe2sfyvnyyq`) ... Unique listing ID
    + start (optional, string, `2014-09-01T09:00-07:00`) ... Timestamp in ISO 8601 for beginning of calendar period
    + end (optional, string, `2014-10-13T13:00-07:00`) ... Timestamp in ISO 8601 for end of calendar period

+ Model (application/json)

    + Body

            {
                "appointments": [ ],
                "open_houses": [ ]
            }

### Get listing's calendar [GET]
+ Response 200
    [Listing Calendar][]


## Listing Available Times [/v1/listing/{listing_id}/availableTimes{?start,end}/]
### Get Listing's Available Times [GET]
+ Parameters
    + listing_id (required, string, `3dfre7dtdpun4c6wx8fbkss32a2szbe2sfyvnyyq`) ... Unique listing ID
    + start (optional, string, `2014-09-01T09:00-07:00`) ... Timestamp in ISO 8601 for beginning of schedule period
    + end (optional, string, `2014-10-13T13:00-07:00`) ... Timestamp in ISO 8601 for end of schedule period

+ Response 200 (application/json)
        
            {
                'tour_slots': [
                    '2014-09-01T09:00-07:00'
                ],
                'open_house_slots': [
                    '2014-09-01T10:00-07:00'
                ]
            }


## Listing Photo [/v1/listing/photo]
### Upload Listing Photo [POST]
+ Request (multipart/form-data; boundary=---BOUNDARY)

            -----BOUNDARY
            Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64

            /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
            HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
            MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
            AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
            AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
            -----BOUNDARY
 
+ Response 201 (application/json)
                   
            {
                's3key': 'knock/community/d3d3Lmdvb2dsZS5jb20xMC0zMS0xOTkx.jpg',
                's3url':
                'knock.example.picture.s3.amazonaws.com/an84nJd8snd8JJ8.jpg'
            }

## Delete Listing Photo [/v1/listing/photo/delete]
### Delete Photo [POST]
+ Request (application/json)

            {
                's3key':'knock/community/d3d3Lmdvb2dsZS5jb20xMC0zMS0xOTkx.jpg'
            }

+ Response 201 (application/json)

            {
                'deleted': 'knock/community/d3d3Lmdvb2dsZS5jb20xMC0zMS0xOTkx.jpg' 
            }

# Group Location

## Timezone [/v1/location/timezone/]
### Get Timezone [GET]
+ Parameters
    + lat (optional, number, `47.45`) ... Lattitude of location of interest
    + lng (optional, number, `-122.30`) ... Longitude of location of interest

+ Response 200 (application/json)

            {
                'timezone': {
                    'dstOffset': 3600,
                    'rawOffset': -28800,
                    'status': 'OK',
                    'timeZoneId': 'America/Los_Angeles',
                    'timeZoneName': 'Pacific Daylight Time'
                }
            }


# Group Manager

## Manager [/v1/manager/{manager_id}]
### Get Manager by ID [GET]
Get manager using the manager_id parameter
+ Parameters
    + manager_id (required, string, `gPZMUKwFBrCjgWqU`) ... Unique manager ID

+ Response 200 (application/json)

            {
                "manager": {
                    "created_time": "Wed, 03 Sep 2014 06:41:48 GMT",
                    "id": 'gPZMUKwFBrCjgWqU',
                    "is_active": true,
                    "modified_time": "Wed, 03 Sep 2014 06:41:48 GMT",
                    "provider": "knock",
                    "username": "spock@enterprise.com"
                }
            }

## Manager Info [/v1/manager/{manager_id}/info]
### Get Manger Info by ID [GET]
+ Parameters
    + manager_id (required, string, `gPZMUKwFBrCjgWqU`) ... Unique manager ID

+ Response 200 (application/json)

            {
                "manager_info": {
                    "bio": "I'm a doctor Jim",
                    "email": "mccoy@enterprise.com",
                    "first_name": "Leonard",
                    "job_title": "Doctor",
                    "last_name": "McCoy",
                    "manager_id": 1,
                    "phone": "206-333-2222",
                    "photo": null,
                    "verification_method": "text"
                }
            }


## Manager from Auth [/v1/manager/]
### Get Manager [GET]
Get manager using the ID imbedded in the authorization header
+ Response 200 (application/json)

            {
                "manager": {
                    "created_time": "Wed, 03 Sep 2014 06:41:48 GMT",
                    "id": 'gPZMUKwFBrCjgWqU',
                    "is_active": true,
                    "modified_time": "Wed, 03 Sep 2014 06:41:48 GMT",
                    "provider": "knock",
                    "username": "spock@enterprise.com"
                }
            }

## Manager Info from Auth [/v1/manager/info]
### Get Manager Info [GET]
Get manager info using the ID imbedded in the authorization header
+ Response 200 (application/json)

            {
                "manager_info": {
                    "bio": "I'm a doctor Jim",
                    "email": "mccoy@enterprise.com",
                    "first_name": "Leonard",
                    "job_title": "Doctor",
                    "last_name": "McCoy",
                    "manager_id": 1,
                    "phone": "206-333-2222",
                    "photo": null,
                    "verification_method": "text"
                }
            }

### Update Manager Info [POST]
+ Request

            {
                "bio": "Still a doctor",
                "email": "mccoy@enterprise.com",
                "first_name": "Leonard",
                "job_title": "Doctor",
                "last_name": "McCoy",
                "phone": "206-222-3333",
                "photo": null,
                "verification_method": "text"
            }

+ Response 201 (application/json)
    
            {
                "manager_info": 'gPZMUKwFBrCjgWqU'
            }

## Manager Preferences [/v1/manager/preferences]
### Get Manager Preferences [GET]
+ Response 200 (application/json)

            {
                "manager_preferences": {
                    "adjacent_showing_interval": "0:15:00",
                    "all_showings": false,
                    "concurrent_showing_visitors": 3,
                    "income_requirement_multiplier": 2,
                    "manager_id": 1
                }
            }

### Update Manager Preferences [POST]
+ Request

            {
                "all_showings": false,
                "concurrent_showing_visitors": 3,
                "adjacent_showing_interval": 15,
                "income_requirement_multiplier": 1.5
            }

+ Response 201 (application/json)

            {
                "manager_preferences": 'ukee6w5hrjyerz3a'
            }

## Manager Listings [/v1/manager/listing/]
### Get Manager Listings [GET]
+ Response 200 (application/json)
    
            {
                'listings': [
                    {
                      "social": {
                        "website": "",
                        "twitter": "",
                        "facebook": ""
                      },
                      "laundry": {
                        "notes": "",
                        "types": []
                      },
                      "description": {
                        "short": "",
                        "full": ""
                      },
                      "floorplan": {
                        "image": null,
                        "bedrooms": "1",
                        "bathrooms": "1",
                        "size": "1000"
                      },
                      "views": [],
                      "extra": {
                        "isSmokingAllowed": null,
                        "yearBuilt": "",
                        "hasWheelchairAccess": null,
                        "sharedUnit": false
                      },
                      "utilities": {
                        "estimatedCost": "",
                        "included": []
                      },
                      "photos": {
                        "files": [
                          {
                            "s3url":
                    "https://example_photos.s3.amazonaws.com/knock/community/a3VwdG9uLmpwZzIwMTdtMTAtMjkgMTU6NDq6NTE4OTkw...",
                            "s3key":
                    "knock/community/a3VwdG9uLmpwvzIwMTQtnTAtMjkg6TU6NDQ6NTEuOtkwOTQw.jpg",
                            "filename": "kupton.jpg"
                          }
                        ]
                      },
                      "amenities": {
                        "common": [],
                        "unit": []
                      },
                      "location": {
                        "propertyType": "",
                        "geo": {
                          "type": "point",
                          "coordinates": [
                            -122.3748877,
                            47.6545525
                          ]
                        },
                        "name": "1234 5th Street",
                        "address": {
                          "city": "Seattle",
                          "zip": "98119",
                          "house": "",
                          "raw": "1234 5th Street",
                          "state": "WA",
                          "street": ""5th Street"
                          "unit": "A"
                        }
                      },
                      "appliances": [],
                      "parking": {
                        "notes": "",
                        "types": []
                      },
                      "leasing": {
                        "availableDate": "2014-10-29T07:00:00.000Z",
                        "application": {
                          "fee": "",
                          "link": ""
                        },
                        "terms": {
                          "deposit": ""
                        },
                        "monthlyRent": "1500"
                      },
                      "pets": {
                        "notes": "",
                        "allowed": []
                      }
                    }
                ]
            }

## Manager Listing [/v1/manager/listing/{listing_id}]
+ Model
    + Body

            {
                'listing':
                    {
                      "social": {
                        "website": "",
                        "twitter": "",
                        "facebook": ""
                      },
                      "laundry": {
                        "notes": "",
                        "types": []
                      },
                      "description": {
                        "short": "",
                        "full": ""
                      },
                      "floorplan": {
                        "image": null,
                        "bedrooms": "1",
                        "bathrooms": "1",
                        "size": "1000"
                      },
                      "views": [],
                      "extra": {
                        "isSmokingAllowed": null,
                        "yearBuilt": "",
                        "hasWheelchairAccess": null,
                        "sharedUnit": false
                      },
                      "utilities": {
                        "estimatedCost": "",
                        "included": []
                      },
                      "photos": {
                        "files": [
                          {
                            "s3url":
                    "https://example_photos.s3.amazonaws.com/knock/community/a3VwdG9uLmpwZzIwMTdtMTAtMjkgMTU6NDq6NTE4OTkw...",
                            "s3key":
                    "knock/community/a3VwdG9uLmpwvzIwMTQtnTAtMjkg6TU6NDQ6NTEuOtkwOTQw.jpg",
                            "filename": "kupton.jpg"
                          }
                        ]
                      },
                      "amenities": {
                        "common": [],
                        "unit": []
                      },
                      "location": {
                        "propertyType": "",
                        "geo": {
                          "type": "point",
                          "coordinates": [
                            -122.3748877,
                            47.6545525
                          ]
                        },
                        "name": "1234 5th Street",
                        "address": {
                          "city": "Seattle",
                          "zip": "98119",
                          "house": "",
                          "raw": "1234 5th Street",
                          "state": "WA",
                          "street": ""5th Street"
                          "unit": "A"
                        }
                      },
                      "appliances": [],
                      "parking": {
                        "notes": "",
                        "types": []
                      },
                      "leasing": {
                        "availableDate": "2014-10-29T07:00:00.000Z",
                        "application": {
                          "fee": "",
                          "link": ""
                        },
                        "terms": {
                          "deposit": ""
                        },
                        "monthlyRent": "1500"
                      },
                      "pets": {
                        "notes": "",
                        "allowed": []
                      }
                    }
            }

### Get Manager Listing [GET]
+ Parameters
    + listing_id (required, string, `PKzrzpCYnpCCsnHf`) ... Unique listing ID

+ Response 200 (application/json)
    [Manager Listing][]

### Update Manager Listing [PUT]
+ Parameters
    + listing_id (required, string, `PKzrzpCYnpCCsnHf`) ... Unique listing ID

+ Request (application/json)
     [Manager Listing][]

+ Response 201 (application/json)

            {
                'listing_id': 'ebsfejwfrbhj6uqs6bvyusus65pxtk8x'
            }

## Manager Hours [/v1/manager/hours/]
### Get Manager Hours [GET]
+ Response 200 (application/json)
    
            {
                'office_hours': [
                    {
                        'id': 141,
                        'manager_id': 63,
                        'date': "2014-10-08T09:00-07:00",
                        'day_of_week': 3,
                        'start_time': "2014-10-13T09:00-07:00",
                        'end_time': "2014-10-13T10:00-07:00",
                        'notes': '',
                        'created_time': "2014-10-04T09:00-07:00",
                        'modified_time': "2014-10-04T09:00-07:00",
                        'is_active': True
                    }
                ]
            }

### Post Manager Hours [POST]
+ Request (application/json)
    
            [
                {
                    "start_time": "2014-10-13T09:00-07:00",
                    "end_time": "2014-10-13T16:30-07:00",
                    "notes": "some sort of note" (optional)
                },
                {
                    "start_time": "2014-10-14T09:00-07:00",
                    "end_time": "2014-10-14T16:30-07:00",
                    "notes": "some sort of note" (optional)
                }
            ]

+ Response 201 (application/json)

            {
                'weekly_office_hour_id': 345
            }


## Open House [/v1/manager/openhouse/]
### Get Open Houses [GET]
+ Response 200 (application/json)
    
            {
                'open_houses': [
                    {
                        'id': 31,
                        'manager_id': 63,
                        'listing_id': '3k39sp2t668tcz7fjzex6j45t4hbgfj8tq7gmzp5',
                        'start_time': "2014-10-13T09:00-07:00",
                        'end_time': "2014-10-13T10:00-07:00",
                        'notes': '',
                        'created_time': "2014-10-04T09:00-07:00",
                        'modified_time': "2014-10-04T09:00-07:00",
                        'is_active': True     
                    }
                ]
            }

## Open House Details [/v1/manager/openhouse/{open_house_id}]
### Get Open House [GET]
+ Parameters
    + open_house_id (required, number, `54`) ... Unique ID for an open house
        event

+ Response 200 (application/json)
    
            {
                'open_house_id': 54
            }


## Manager Calendar [/v1/manager/calendar/]
### Get Manager Calendar [GET]
+ Parameters
    + manager_id (optional, number, `43`) ... Unique manager ID
    + start (optional, string, `2014-10-04T09:00-07:00`) ... Start time
    + end (optional, string, `2014-10-04T10:00-07:00`) ... End time

+ Response 200 (application/json)

            {
                'appointments': [
                    {
                        "created_time": "Wed, 03 Sep 2014 08:29:23 GMT",
                        "end_time": "2014-09-08T08:00:00-07:00",
                        "id": 2,
                        "is_active": true,
                        "manager_id: 1,
                        "manager_notes": null,
                        "modified_time": "Wed, 03 Sep 2014 08:29:23 GMT",
                        "renter_id": 2,
                        "renter_notes": "Some renter written writings",
                        "renter_visited": false,
                        "start_time": "2014-09-08T08:15:00-07:00",
                        "status": "requested",
                        "type": "tour",
                        "listing_id": "054cfc34c7ec452af511cd5e2202c12966fc54a7"
                    }

                ],
                'requests': [

                ],
                'open_houses': [
                    {
                        'id': 31,
                        'manager_id': 63,
                        'listing_id': '3k39sp2t668tcz7fjzex6j45t4hbgfj8tq7gmzp5',
                        'start_time': "2014-10-13T09:00-07:00",
                        'end_time': "2014-10-13T10:00-07:00",
                        'notes': '',
                        'created_time': "2014-10-04T09:00-07:00",
                        'modified_time': "2014-10-04T09:00-07:00",
                        'is_active': True     
                    }
                ]
            }


## Manager Community [/v1/manager/community/]
### Get Manager Communities [GET]
+ Response 200 (application/json)

            {
                'communities': [
                    
                ]
            }

# Group Profile

## Profile [/v1/profile/]
### Get Profile [GET]
+ Response 200 (application/json)

        {
            "profile": {
                "bio": "Explore strange new worlds",
                "co_tenants": 4,
                "email": "kirk@enterprise.com",
                "first_name": "Tiberius",
                "income": "100000",
                "job_title": "Captain",
                "last_name": "Kirk",
                "phone": "(206)765-4321",
                "photo": null,
                "renter_id": 8,
                "verification_method": null
            }
        }

### Save Profile [PUT]
+ Request (application/json)

        {
            'password': 'qwerty43',
            'first_name': 'John',
            'last_name': 'Smith',
            'email': 'johnsmith@email.com',
            'credit_score': '3',
            'monthly_income': '40000',
            'phone': {
                'npa': '206',
                'nxx': '111',
                'xxxx': '2222'
            },
            'pets': {
                'dogs': '',
                'cats': ''
            },
            'co_tenants': 3,
            'target_move_date': '05/11/2014',
            'photo': '',
            'bio': 'I have a beard'
        }

+ Response 201 (application/json)

        {
            'profile_id': 'ecc55hpp275pc3sm'
        }

# Group Renters

## Renters [/v1/renters/]
### Get Renters [GET]
+ Response 200

            {
              "result": [
                {
                  "created_time": "2014-09-04T16:51:02.715980+00:00",
                  "id": 1,
                  "is_active": true,
                  "modified_time": "2014-09-04T16:51:02.715980+00:00",
                  "provider": "knock",
                  "social_provider_id": null,
                  "username": "spock@enterprise.com"
                },
                {
                  "created_time": "2014-09-04T17:02:25.531546+00:00",
                  "id": 2,
                  "is_active": true,
                  "modified_time": "2014-09-04T17:02:25.531546+00:00",
                  "provider": "knock",
                  "social_provider_id": null,
                  "username": "kirk@enterprise.com"
                },
                {
                  "created_time": "2014-09-04T18:06:45.016349+00:00",
                  "id": 3,
                  "is_active": true,
                  "modified_time": "2014-09-04T18:06:45.016349+00:00",
                  "provider": "knock",
                  "social_provider_id": null,
                  "username": "mccoy@enterprise.com"
                },
                {
                  "created_time": "2014-09-06T21:06:11.369480+00:00",
                  "id": 4,
                  "is_active": true,
                  "modified_time": "2014-09-06T21:06:11.369480+00:00",
                  "provider": "linkedin",
                  "social_provider_id": "F89ce7D3CC",
                  "username": "uhura@enterprise.com"
                },
                {
                  "created_time": "2014-09-06T21:27:09.338640+00:00",
                  "id": 5,
                  "is_active": true,
                  "modified_time": "2014-09-06T21:27:09.338640+00:00",
                  "provider": "facebook",
                  "social_provider_id": "123412348094234",
                  "username": "scott@enterprise.com"
                },
                {
                  "created_time": "2014-09-12T01:09:51.753075+00:00",
                  "id": 6,
                  "is_active": true,
                  "modified_time": "2014-09-12T01:09:51.753075+00:00",
                  "provider": "facebook",
                  "social_provider_id": "9824234091234234",
                  "username": "sulu@enterprise.com"
                },
                {
                  "created_time": "2014-09-16T17:29:54.926851+00:00",
                  "id": 7,
                  "is_active": true,
                  "modified_time": "2014-09-16T17:29:54.926851+00:00",
                  "provider": "knock",
                  "social_provider_id": null,
                  "username": "chekov@enterprise.com"
                }
              ]
            }


## Renter [/v1/renter/{renter_id}]
### Get Renter [GET]
+ Parameters
    + renter_id (required, number, `7`) ... Unique renter ID

+ Response 200 (application/json)
    
            {
                'renter': {
                    "created_time": "2014-09-16T17:29:54.926851+00:00",
                    "id": 7,
                    "is_active": true,
                    "modified_time": "2014-09-16T17:29:54.926851+00:00",
                    "provider": "knock",
                    "social_provider_id": null,
                    "username": "chekov@enterprise.com"
                } 
            }


## Renter Info [/v1/renter/{renter_id}/info]
### Get Renter Info
+ Parameters
    + renter_id (required, number, `8`) ... Unique renter ID

+ Response 200 (application/json)
            
            {
                 "renter_info": {
                     "bio": "Explore strange new worlds",
                     "co_tenants": 4,
                     "email": "kirk@enterprise.com",
                     "first_name": "Tiberius",
                     "income": "100000",
                     "job_title": "Captain",
                     "last_name": "Kirk",
                     "phone": "(206)765-4321",
                     "photo": null,
                     "renter_id": 8,
                     "verification_method": null
                 }            
            }


# Group Search

## Search [/v1/search/]
+ Model (application/json)
    + Body
   
             {
                  "num_results": 1,
                  "objects": {
                    "1005 N Thorne Ave, 93728": {
                      "coordinates": {
                        "latitude": 36.755985,
                        "longitude": -119.813107
                      },
                      "listings": [
                        {
                          "amenities": {
                            "appliances": null,
                            "common": "",
                            "laundry": null,
                            "parking_type": null,
                            "unit": [],
                            "utilities": {
                              "estimated_cost": null,
                              "included": []
                            },
                            "views": null
                          },
                          "basic": {
                            "bathrooms": 1.5,
                            "bedrooms": 3.0,
                            "price": 1095.0,
                            "shared_unit": "false",
                            "size": 1532.0,
                            "year_built": null
                          },
                          "debug": {
                            "raw_url": "https://fresnomanagement.appfolio.com/listings/listings/24d529e2-c0c9-4932-92d5-89194bdd8378",
                            "source": "appfolio",
                            "visibility": "internal"
                          },
                          "details": {
                            "description": {
                              "full": "Charming 3 bedroom 2 bath home located on the corner lot includes a small bonus room that can be used office space or a play area.  Traditional Tower style home consists of built in cabinets throughout the home, detached 1 car garage, refrigerator and gas stove, laundry hookups located on the interior porch like setting. There is a covered patio that is great for entertaining and mature landscaping give you a nice and shady backyard.  Call today to schedule your appointment to view the inside as it won't last long!Fresno Management Companywww.FresnoPMC.com(559)438-9411BRE# 01795978",
                              "short": "Charming Tower Bungalow"
                            },
                            "pets": {
                              "allowed": [],
                              "notes": ""
                            },
                            "smoking_allowed": null,
                            "wheelchair_access": null
                          },
                          "id": "edf2bf3b291066e95cfeee8105248927db884bac",
                          "leasing": {
                            "application": {
                              "fee": "",
                              "link": ""
                            },
                            "available_date": null,
                            "company": {
                              "name": "Fresno Management Company",
                              "phone": "(559) 438-9411",
                              "url": ""
                            },
                            "terms": {
                              "deposit": null
                            }
                          },
                          "location": {
                            "address": {
                              "city": "Fresno",
                              "house": "1005",
                              "raw": "1005 N. Thorne Ave., Fresno, CA 93728",
                              "state": "CA",
                              "street": "N Thorne Ave",
                              "unit": null,
                              "zip": "93728"
                            },
                            "geo": {
                              "coordinates": [
                                -119.813107,
                                36.755985
                              ],
                              "type": "point"
                            },
                            "name": "1005 N Thorne Ave, 93728",
                            "property_type": "House"
                          },
                          "photos": [
                            "https://photos.knockrentals.com/535d8d6f-f39d-48d8-9782-7e35ba261fbd/medium.jpg",
                            "https://photos.knockrentals.com/60177a25-8f1b-40a4-ad92-c1a417bfba62/medium.jpg",
                            "https://photos.knockrentals.com/6321346b-120d-4ad5-b5d8-d1e8912ac00e/medium.jpg",
                            "https://photos.knockrentals.com/f13679ad-ee7f-4145-9e63-ac5f4dff8038/medium.jpg",
                            "https://photos.knockrentals.com/3466a9c9-cce4-4b80-8b1b-b59566eeacaa/medium.jpg",
                            "https://photos.knockrentals.com/d9e77424-3ebf-4469-8255-a71b9ae47786/medium.jpg",
                            "https://photos.knockrentals.com/2cdf758a-1ea6-442b-ad7c-3e71258cc6c6/medium.jpg",
                            "https://photos.knockrentals.com/ec10bdfd-ff24-427c-be15-7671a658612f/medium.jpg",
                            "https://photos.knockrentals.com/9ca680a0-aa8d-4642-98ec-23bdd81a5d41/medium.jpg",
                            "https://photos.knockrentals.com/89390baa-b292-4f23-a35a-ed7eee4da042/medium.jpg",
                            "https://photos.knockrentals.com/497d8bce-c4c2-48a3-96ae-7e02287e625e/medium.jpg",
                            "https://photos.knockrentals.com/a79a7a09-01d6-4446-8690-a769b69af102/medium.jpg",
                            "https://photos.knockrentals.com/397958b4-aa64-4a21-8d0e-3d800bf20bcb/medium.jpg"
                          ],
                          "promotions": "",
                          "social_urls": []
                        }
                      ],
                      "type": "H"
                    }
                  },
                  "page": 1,
                  "total_pages": 1.0
                }

### Post search parameters [POST]

+ Request (application/json)

        {
          "price": {
            "low": 100,
            "high": 1200
          },
          "bedrooms": {
            "low": 2,
            "high": 5
          },
          "bathrooms": {
            "low": 1,
            "high": 4
          },
          "size": {
            "low": 0,
            "high": 2000
          },
          "shape": {
              "id": "fresno_high_fresno_ca",
              "type": "neighborhood"
          }
        }


+ Response 200

    [Search][]



## Search Suggest [/v1/search/suggest{?query}/]
+ Parameters
    + query (required, string, `was`) ... The beginning letters of a city name [minimum 3] 

+ Model (application/json)
    + Body
        
            {
                 "num_results": 5,
                 "page": 1,
                 "search_query": "was",
                 "suggestions": [
                   {
                     "center": {
                       "lat": 38.9041031,
                       "lon": -77.017229
                     },
                     "id": "washington_dc",
                     "score": 646449.0,
                     "text": "Washington, DC",
                     "type": "city"
                   },
                   {
                     "center": {
                       "lat": 40.7352483454,
                       "lon": -111.835355467
                     },
                     "id": "wasatch_hollow_salt_lake_city_ut",
                     "score": 1.0,
                     "text": "Wasatch Hollow, Salt Lake City, UT",
                     "type": "neighborhood"
                   },
                   {
                     "center": {
                       "lat": 35.5937752,
                       "lon": -119.3673065
                     },
                     "id": "wasco_ca",
                     "score": 1.0,
                     "text": "Wasco, CA",
                     "type": "city"
                   },
                   {
                     "center": {
                       "lat": 45.5916658,
                       "lon": -120.6974942
                     },
                     "id": "wasco_or",
                     "score": 1.0,
                     "text": "Wasco, OR",
                     "type": "city"
                   },
                   {
                     "center": {
                       "lat": 44.0822636,
                       "lon": -93.4998284
                     },
                     "id": "waseca_mn",
                     "score": 1.0,
                     "text": "Waseca, MN",
                     "type": "city"
                   }
                 ],
                 "total_pages": 1
            }

### Get search suggestion [GET]
+ Response 200
    [Search Suggest][]


## Search Context [/v1/search/context/{city_id}]
### Get Search Context [GET]
+ Parameters
    + city_id (required, string, `falkner_ms`) ... Unique city ID 

+ Response 200 (application/json)

            {
                'city': 'spokane',
                'shape': [
                    [-88.964918, 34.829735],
                    [-88.964918, 34.83021],
                    [-88.964918, 34.83373],
                    [-88.964878, 34.837811]
                ]
            }


## Search Shapes [/v1/search/shapes/{shape_type}/{shape_id}]
### Get Shape [GET]
+ Parameters
    + shape_type (required, string, `Polygon`) ... Shape type
    + shape_id (required, string, `falkner_ms`) ... Shape ID

+ Response 200 (application/json)

            {                                          
                'city': 'spokane',
                'shape': [
                    [-88.964918, 34.829735],
                    [-88.964918, 34.83021],
                    [-88.964918, 34.83373],
                    [-88.964878, 34.837811]
                ]
            }

# Group Static

## Sitemap [/v1/sitemap/]
+ Model (application/json)
    + Body

            {
              "routes": [
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/system/health/details"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/system/health/check"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/calendar/request/"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/calendar/request/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/manager/preferences/"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/manager/preferences/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/manager/openhouse/"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/manager/openhouse/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/manager/calendar/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/manager/listing/"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/manager/listing/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/manager/hours/"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/manager/hours/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/manager/info/"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/manager/info/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/search/suggest/"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/auth/register"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/auth/validate"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/auth/facebook"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/auth/linkedin"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/manager/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/profile/"
                },
                {
                  "methods": [
                    "PUT",
                    "OPTIONS"
                  ],
                  "name": "/v1/profile/"
                },
                {
                  "methods": [
                    "HEAD",
                    "POST",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/renters"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/sitemap"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/search/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/"
                },
                {
                  "methods": [
                    "POST",
                    "OPTIONS"
                  ],
                  "name": "/v1/calendar/request/<request_id>/status"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/manager/openhouse/<open_house_id>"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/manager/listing/<listing_id>"
                },
                {
                  "methods": [
                    "PUT",
                    "OPTIONS"
                  ],
                  "name": "/v1/manager/listing/<listing_id>"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/listing/<listing_id>/openhouse/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/listing/<listing_id>/calendar/"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/v1/listing/<listing_id>"
                },
                {
                  "methods": [
                    "HEAD",
                    "OPTIONS",
                    "GET"
                  ],
                  "name": "/static/<path:filename>"
                }
              ]
            }

### Get sitemap [GET]
+ Response 200
    [Sitemap][]

# Group Upload

## Upload Profile [/v1/upload/profile]
### Upload Profile Picture [POST]
+ Request (multipart/form-data; boundary=---BOUNDARY)

            -----BOUNDARY
            Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
      
            /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
            HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
            MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
            AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
            AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
            -----BOUNDARY

+ Response 201 (application/json)

            {
                'message': 'picture has been uploaded'
            }

+ Response 500 (application/json)

            {
                'error': {
                    'message': 'Failed to upload [picture]',
                    'exception': 'Exception:'
                }
            }
